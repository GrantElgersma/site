{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"All My Coursework in One Place This is a static site developed with MkDocs and Markdown to do the following: Document my learning activities in the Master of Science in Scientific and Technical Communication program at the University of Minnesota Organize online resources and concepts I encountered during my coursework Display my familiarity with documentation concepts and digital tools used by technical communicators \u00ad","title":"Home"},{"location":"#all-my-coursework-in-one-place","text":"This is a static site developed with MkDocs and Markdown to do the following: Document my learning activities in the Master of Science in Scientific and Technical Communication program at the University of Minnesota Organize online resources and concepts I encountered during my coursework Display my familiarity with documentation concepts and digital tools used by technical communicators \u00ad","title":"All My Coursework in One Place"},{"location":"Designing%20and%20Developing%20Online%20Distance%20Learning/","text":"I took this class in Spring, 2022... Concepts Projects Readings Videos","title":"Designing and Developing Online Distance Learning"},{"location":"Designing%20and%20Developing%20Online%20Distance%20Learning/#concepts","text":"","title":"Concepts"},{"location":"Designing%20and%20Developing%20Online%20Distance%20Learning/#projects","text":"","title":"Projects"},{"location":"Designing%20and%20Developing%20Online%20Distance%20Learning/#readings","text":"","title":"Readings"},{"location":"Designing%20and%20Developing%20Online%20Distance%20Learning/#videos","text":"","title":"Videos"},{"location":"Editing%20and%20Style%20for%20Technical%20Communication/","text":"This is a class I took in Summer, 2021. Concepts Projects Readings Videos","title":"Editing and Style for Technical Communication"},{"location":"Editing%20and%20Style%20for%20Technical%20Communication/#concepts","text":"","title":"Concepts"},{"location":"Editing%20and%20Style%20for%20Technical%20Communication/#projects","text":"","title":"Projects"},{"location":"Editing%20and%20Style%20for%20Technical%20Communication/#readings","text":"","title":"Readings"},{"location":"Editing%20and%20Style%20for%20Technical%20Communication/#videos","text":"","title":"Videos"},{"location":"Final%20Digital%20Literacy%20Narrative/","text":"In the digital literacy narrative I wrote at the beginning of this course, I focused on my lack of curiosity about computer technology in my early years. Amazingly, this has changed dramatically just in the last few months. Recently, I noticed that most of the YouTube videos that are now suggested for me to watch are tech related. This is because I have been watching a lot of tutorials and explainer videos about topics we've explored in \"Writing with Digital Tech\" and other classes this semester. During lunch, I'm now watching videos on how to use Python to build simple apps and how AI is being used for writing tasks. I'm clicking on reviews of various software tools and looking up explanations for computer-related terms I've come across in articles and blog posts. Whereas before I might have marveled at the unapproachable nature of the content, now I find myself thinking, \"Hmmm, maybe I could try that.\" In the Research Phase I would say that I'm still in the research phase of my learning, but I've noticed a big shift in my willingness to try out tools that I don't readily understand. Though I may have a long way to go before I would feel really competent using the command line for many computer functions, or building even a simple app, the possibility that I could become good at these things with time seems much more likely in my mind than it did before. I had several successes overcoming challenges this semester, all of which helped me to build confidence and trust in my learning process. I've also gotten a better sense of how much there really is to learn, which is daunting, but also has motivated me to think about my learning priorities. How much code do I realistically need to know as a technical communicator? If I'm going to try to learn a bit about markup languages, which ones should I focus on? I realize I don't need to have a software developer's level of knowledge, but knowing terminology, concepts, and basic purposes of tools can be very helpful for a technical communicator. Writing as part of information ecosystems Learning about DITA has had a big effect on my thinking about writing with digital technology. Before encountering DITA, most of my thinking about writing tended to be focused on how information can be organized in individual documents. Understanding how DITA works makes me think of informative written content in terms of architecture and structure in large information ecosystems. I'm now more aware of the technological possibilities for collaborative writing: not only Google Docs, but also DITA and GitHub. Mapping out my next steps This course has given me a sense of the digital writing landscape, or maybe a map of the landscape. I now have choices to make about where to visit next and how much time to spend there. My goal is to follow the model I now have in the \"Writing with Digital Tech\" page of my static site in order to document other topics and projects I've done in my other classes. The goal is to use this static site to practice using Markdown. I learn best when I am working on creative projects or tasks that will bring me tangible or immediate benefits of some kind. MkDocs is a good way to bring together much of the content I've encountered in class. Summarizing what I've learned in just a few sentences for each concept is also a great exercise. While doing this, I noticed gaps in my understanding. If I didn't know how to explain something easily in my own words, I had to go back and reread concepts to make sure I could express them accurately. Entering a conversation In some ways, this class felt like I had jumped into the middle of an ongoing conversation that has been happening without me for decades now. I'm now trying to catch up on the terminology and get to the foundation of how and why things work the way they do. This semester, I've discovered some of the places where this conversation is taking place: GitHub, Stack Overflow, TechWhirl, I'd Rather Be Writing, and many more. Though I'm still piecing together the references and looking up terms, I'm now curious and engaged, which has always been the place from which, for me, substantial learning begins.","title":"Final Digital Literacy Narrative"},{"location":"Final%20Digital%20Literacy%20Narrative/#in-the-research-phase","text":"I would say that I'm still in the research phase of my learning, but I've noticed a big shift in my willingness to try out tools that I don't readily understand. Though I may have a long way to go before I would feel really competent using the command line for many computer functions, or building even a simple app, the possibility that I could become good at these things with time seems much more likely in my mind than it did before. I had several successes overcoming challenges this semester, all of which helped me to build confidence and trust in my learning process. I've also gotten a better sense of how much there really is to learn, which is daunting, but also has motivated me to think about my learning priorities. How much code do I realistically need to know as a technical communicator? If I'm going to try to learn a bit about markup languages, which ones should I focus on? I realize I don't need to have a software developer's level of knowledge, but knowing terminology, concepts, and basic purposes of tools can be very helpful for a technical communicator.","title":"In the Research Phase"},{"location":"Final%20Digital%20Literacy%20Narrative/#writing-as-part-of-information-ecosystems","text":"Learning about DITA has had a big effect on my thinking about writing with digital technology. Before encountering DITA, most of my thinking about writing tended to be focused on how information can be organized in individual documents. Understanding how DITA works makes me think of informative written content in terms of architecture and structure in large information ecosystems. I'm now more aware of the technological possibilities for collaborative writing: not only Google Docs, but also DITA and GitHub.","title":"Writing as part of information ecosystems"},{"location":"Final%20Digital%20Literacy%20Narrative/#mapping-out-my-next-steps","text":"This course has given me a sense of the digital writing landscape, or maybe a map of the landscape. I now have choices to make about where to visit next and how much time to spend there. My goal is to follow the model I now have in the \"Writing with Digital Tech\" page of my static site in order to document other topics and projects I've done in my other classes. The goal is to use this static site to practice using Markdown. I learn best when I am working on creative projects or tasks that will bring me tangible or immediate benefits of some kind. MkDocs is a good way to bring together much of the content I've encountered in class. Summarizing what I've learned in just a few sentences for each concept is also a great exercise. While doing this, I noticed gaps in my understanding. If I didn't know how to explain something easily in my own words, I had to go back and reread concepts to make sure I could express them accurately.","title":"Mapping out my next steps"},{"location":"Final%20Digital%20Literacy%20Narrative/#entering-a-conversation","text":"In some ways, this class felt like I had jumped into the middle of an ongoing conversation that has been happening without me for decades now. I'm now trying to catch up on the terminology and get to the foundation of how and why things work the way they do. This semester, I've discovered some of the places where this conversation is taking place: GitHub, Stack Overflow, TechWhirl, I'd Rather Be Writing, and many more. Though I'm still piecing together the references and looking up terms, I'm now curious and engaged, which has always been the place from which, for me, substantial learning begins.","title":"Entering a conversation"},{"location":"Foundations%20of%20Computer%20Applications%20for%20Business%20and%20Education/","text":"I took this class in Summer, 2021 to learn about using computer applications for instruction and business purposes. Concepts Projects Readings Videos","title":"Foundations of Computer Applications for Business and Education"},{"location":"Foundations%20of%20Computer%20Applications%20for%20Business%20and%20Education/#concepts","text":"","title":"Concepts"},{"location":"Foundations%20of%20Computer%20Applications%20for%20Business%20and%20Education/#projects","text":"","title":"Projects"},{"location":"Foundations%20of%20Computer%20Applications%20for%20Business%20and%20Education/#readings","text":"","title":"Readings"},{"location":"Foundations%20of%20Computer%20Applications%20for%20Business%20and%20Education/#videos","text":"","title":"Videos"},{"location":"Information%20Design%2C%20Theory%20and%20Practice/","text":"I took this class in Spring, 2022... Concepts Projects Readings Videos","title":"Information Design, Theory and Practice"},{"location":"Information%20Design%2C%20Theory%20and%20Practice/#concepts","text":"","title":"Concepts"},{"location":"Information%20Design%2C%20Theory%20and%20Practice/#projects","text":"","title":"Projects"},{"location":"Information%20Design%2C%20Theory%20and%20Practice/#readings","text":"","title":"Readings"},{"location":"Information%20Design%2C%20Theory%20and%20Practice/#videos","text":"","title":"Videos"},{"location":"Integrating%20DITA%20and%20Markdown/","text":"Darwin Information Typing Architecture (DITA) was first developed and used by IBM to standardize the company's documentation. Since 2001, DITA has become one of the most-used information formats in technical communication. DITA is useful for structuring content, especially in large businesses where information is often reused. DITA follows the single-sourcing method for managing content, where information is written in small chunks and then structured with extensible markup language (XML). XML organizes content using tags and data that are defined as topics written and combined to be used in a variety of contexts for multiple outputs. Markdown was created in 2004 by John Gruber and Aaron Schwartz to be an easy markup language for the average person to use. It became popular among web writers and technical communicators because it made the process of formatting text quicker. It also works well in the world of web and app development. Markdown allows a writer to create headers, lists, word emphasis, and code blocks without lifting the hands from a keyboard. DITA vs. Markdown Technical communicators have sometimes disagreed about whether DITA or Markdown should be used for documentation. Critics of Markdown point out that the many \"flavors\" of Markdown that have developed means Markdown cannot be relied on as a standard for technical communicators. Those who use a particular flavor of Markdown will also find that it's more difficult to migrate a large set of Markdown documents to another tool that uses another markup language. Despite some misgivings, Markdown has continued to gain popularity because it is so useable and easy to learn. In the last few years, there has been more conversation among technical communicators about how to integrate Markdown with other tools that use more complicated markup language. Technical communicators who use both Markdown and DITA want to combine the strengths of both to complete documentation tasks. The Backhoe and The Shovel At the end of a talk at the 2019 Soap! content conference, Patrick Bosek offered the following analogy to explain how technical communicators should think about DITA and Markdown: \"Markdown is kind of like a shovel and DITA is like a backhoe. And you have these people who have never used a backhoe who are like 'that's way too complex. Why would you ever want to do that?' And then you have people who are construction workers who build big buildings and they're like--Why would you ever use a shovel? You can't build a big building with a shovel. If you're going to start a project by yourself and you don't know how to operate a backhoe, a shovel looks like the obvious answer. We've all used a shovel. But who in [this room] has ever used a backhoe. So they're just different. There's a place in the world for both of them and any construction site that's building something sufficiently large are going to have both of them there. And you don't have people arguing about whether or not we should eliminate shovels or backhoes.\" Patrick Bosek, (Living in Harmony: DITA and Markdown, soap! 2019 conference) According to Bosek, DITA's strength is its longevity and stability. \"DITA implementations oftentimes will last for decades,\" he says. \"They will be installed and stay installed and producing value for ten or more years.\" On the other hand, \"Markdown implementations can start in under a week.\" In other words, DITA is useful for well established companies that have accumulated a lot of information over the years. Markdown is helpful for startups or young companies that are trying to ramp up their productivity quickly. Markdown also fits better in an Agile environment where an iterative workflow takes the form of sprints, whereas DITA may be the optimal system for a marathon where the baton must be passed smoothly from year to year. Instead of arguing which system is best, technical communicators should consider how DITA and Markdown could work together to serve companies at various stages of development and according to particular work processes. How to Convert Markdown to DITA Three information management specialists working at CISCO wrote a blog post describing their experience moving Markdown files to DITA. One of the lessons they learned is to consider that Markdown files will inevitably have to be moved into DITA at a later stage of the information development process. At CISCO, technical communicators used a Git-Markdown process for collaboration. For an iterative process, this is preferable and could solve some of the issues technical communicators often find in a DITA environment where different contributors might have slightly different approaches to writing or structuring content within the company's information system. With DITA, these different approaches may not become apparent until later in the process. With GitHub, technical communicators and subject matter experts can work out an agreed-upon style or framework early on in the process, knowing that the changes they're making at that stage could make it easier to transition to DITA later on. There are many ways to convert Markdown files to XML so they can be used in a DITA information system. At the present time, this process requires more steps than many technical communicators would prefer. It appears that integration is an increasing priority for many companies, especially if software is a big part of their process or products, so it is likely we will see a more unified integration in the near future. DITA Open Toolkit (DITA-OT) currently allows a flavor of Markdown called CommonMark to be written directly in DITA topic references, and DITA content can be exported as Markdown too. With DITA-OT, a Markdown topic can be added to a DITA publication as long as the format is set to be attributed to Markdown: <?xml version=\"1.0\" encoding=\"utf-8\"?> <!DOCTYPE map PUBLIC \"-//OASIS//DTD DITA Map//EN\" \"map.dtd\"> <map> <topicref href=\"markdown-dita-topic.md\" format=\"markdown\"/> </map> When running DITA outputs (e.g. HTML or PDF), Markdown is temporarily converted to DITA but will remain a Markdown source file. This approach works best for simple content with multiple collaborators that has undergone lots of iterations before it's ready to be combined with more complex content in DITA XML. Conclusion There are many methods and tools for integrating Markdown and DITA. In addition to DITA-OT, these include Lightweight DITA (LwDITA), pandoc, Easy DITA, and the Oxygen batch converter plugin. For technical communicators, it's helpful to know the circumstances in which Markdown should be used, the most effective methods of iterative collaboration using Markdown and DITA, and the tools that make the migration of information between Markdown and DITA a smooth process.","title":"Integrating DITA and Markdown"},{"location":"Integrating%20DITA%20and%20Markdown/#dita-vs-markdown","text":"Technical communicators have sometimes disagreed about whether DITA or Markdown should be used for documentation. Critics of Markdown point out that the many \"flavors\" of Markdown that have developed means Markdown cannot be relied on as a standard for technical communicators. Those who use a particular flavor of Markdown will also find that it's more difficult to migrate a large set of Markdown documents to another tool that uses another markup language. Despite some misgivings, Markdown has continued to gain popularity because it is so useable and easy to learn. In the last few years, there has been more conversation among technical communicators about how to integrate Markdown with other tools that use more complicated markup language. Technical communicators who use both Markdown and DITA want to combine the strengths of both to complete documentation tasks.","title":"DITA vs. Markdown"},{"location":"Integrating%20DITA%20and%20Markdown/#the-backhoe-and-the-shovel","text":"At the end of a talk at the 2019 Soap! content conference, Patrick Bosek offered the following analogy to explain how technical communicators should think about DITA and Markdown: \"Markdown is kind of like a shovel and DITA is like a backhoe. And you have these people who have never used a backhoe who are like 'that's way too complex. Why would you ever want to do that?' And then you have people who are construction workers who build big buildings and they're like--Why would you ever use a shovel? You can't build a big building with a shovel. If you're going to start a project by yourself and you don't know how to operate a backhoe, a shovel looks like the obvious answer. We've all used a shovel. But who in [this room] has ever used a backhoe. So they're just different. There's a place in the world for both of them and any construction site that's building something sufficiently large are going to have both of them there. And you don't have people arguing about whether or not we should eliminate shovels or backhoes.\" Patrick Bosek, (Living in Harmony: DITA and Markdown, soap! 2019 conference) According to Bosek, DITA's strength is its longevity and stability. \"DITA implementations oftentimes will last for decades,\" he says. \"They will be installed and stay installed and producing value for ten or more years.\" On the other hand, \"Markdown implementations can start in under a week.\" In other words, DITA is useful for well established companies that have accumulated a lot of information over the years. Markdown is helpful for startups or young companies that are trying to ramp up their productivity quickly. Markdown also fits better in an Agile environment where an iterative workflow takes the form of sprints, whereas DITA may be the optimal system for a marathon where the baton must be passed smoothly from year to year. Instead of arguing which system is best, technical communicators should consider how DITA and Markdown could work together to serve companies at various stages of development and according to particular work processes.","title":"The Backhoe and The Shovel"},{"location":"Integrating%20DITA%20and%20Markdown/#how-to-convert-markdown-to-dita","text":"Three information management specialists working at CISCO wrote a blog post describing their experience moving Markdown files to DITA. One of the lessons they learned is to consider that Markdown files will inevitably have to be moved into DITA at a later stage of the information development process. At CISCO, technical communicators used a Git-Markdown process for collaboration. For an iterative process, this is preferable and could solve some of the issues technical communicators often find in a DITA environment where different contributors might have slightly different approaches to writing or structuring content within the company's information system. With DITA, these different approaches may not become apparent until later in the process. With GitHub, technical communicators and subject matter experts can work out an agreed-upon style or framework early on in the process, knowing that the changes they're making at that stage could make it easier to transition to DITA later on. There are many ways to convert Markdown files to XML so they can be used in a DITA information system. At the present time, this process requires more steps than many technical communicators would prefer. It appears that integration is an increasing priority for many companies, especially if software is a big part of their process or products, so it is likely we will see a more unified integration in the near future. DITA Open Toolkit (DITA-OT) currently allows a flavor of Markdown called CommonMark to be written directly in DITA topic references, and DITA content can be exported as Markdown too. With DITA-OT, a Markdown topic can be added to a DITA publication as long as the format is set to be attributed to Markdown: <?xml version=\"1.0\" encoding=\"utf-8\"?> <!DOCTYPE map PUBLIC \"-//OASIS//DTD DITA Map//EN\" \"map.dtd\"> <map> <topicref href=\"markdown-dita-topic.md\" format=\"markdown\"/> </map> When running DITA outputs (e.g. HTML or PDF), Markdown is temporarily converted to DITA but will remain a Markdown source file. This approach works best for simple content with multiple collaborators that has undergone lots of iterations before it's ready to be combined with more complex content in DITA XML.","title":"How to Convert Markdown to DITA"},{"location":"Integrating%20DITA%20and%20Markdown/#conclusion","text":"There are many methods and tools for integrating Markdown and DITA. In addition to DITA-OT, these include Lightweight DITA (LwDITA), pandoc, Easy DITA, and the Oxygen batch converter plugin. For technical communicators, it's helpful to know the circumstances in which Markdown should be used, the most effective methods of iterative collaboration using Markdown and DITA, and the tools that make the migration of information between Markdown and DITA a smooth process.","title":"Conclusion"},{"location":"International%20Professional%20Communication/","text":"I took this class in Fall, 2021... Concepts Projects Readings Videos","title":"International Professional Communication"},{"location":"International%20Professional%20Communication/#concepts","text":"","title":"Concepts"},{"location":"International%20Professional%20Communication/#projects","text":"","title":"Projects"},{"location":"International%20Professional%20Communication/#readings","text":"","title":"Readings"},{"location":"International%20Professional%20Communication/#videos","text":"","title":"Videos"},{"location":"Introduction%20to%20Graduate%20Studies%20in%20Scientific%20and%20Technical%20Communication/","text":"I took this class in Fall, 2021 Concepts Projects Readings Videos","title":"Introduction to Graduate Studies in Scientific and Technical Communication"},{"location":"Introduction%20to%20Graduate%20Studies%20in%20Scientific%20and%20Technical%20Communication/#concepts","text":"","title":"Concepts"},{"location":"Introduction%20to%20Graduate%20Studies%20in%20Scientific%20and%20Technical%20Communication/#projects","text":"","title":"Projects"},{"location":"Introduction%20to%20Graduate%20Studies%20in%20Scientific%20and%20Technical%20Communication/#readings","text":"","title":"Readings"},{"location":"Introduction%20to%20Graduate%20Studies%20in%20Scientific%20and%20Technical%20Communication/#videos","text":"","title":"Videos"},{"location":"Markdown/","text":"What is Markdown and Why is it Used? Markdown is a lightweight markup language in a plain text format.","title":"Markdown"},{"location":"Usability%20and%20Human%20Factors%20in%20Technical%20Communication/","text":"I took this class in Spring, 2022... Concepts Projects Readings Videos","title":"Usability and Human Factors in Technical Communication"},{"location":"Usability%20and%20Human%20Factors%20in%20Technical%20Communication/#concepts","text":"","title":"Concepts"},{"location":"Usability%20and%20Human%20Factors%20in%20Technical%20Communication/#projects","text":"","title":"Projects"},{"location":"Usability%20and%20Human%20Factors%20in%20Technical%20Communication/#readings","text":"","title":"Readings"},{"location":"Usability%20and%20Human%20Factors%20in%20Technical%20Communication/#videos","text":"","title":"Videos"},{"location":"Writing%20with%20Digital%20Tech/","text":"I took this course in Fall, 2021 to expand my digital literacy, develop competencies in digital writing techniques, and learn to use software documentation tools. Below are the important concepts I encountered and the projects I completed. Concepts Digital Literacy: the ability to evaluate information and use communication tools in a digital context. Markup Language: A way of writing instructions for a computer to perform tasks. Markdown is a lightweight markup language commonly used by technical communicators. Agile: An iterative development process organized as teams-based, non-linear, non-sequential sprints. For more on how technical communicators work in an Agile environment click here . Diataxis: a framework for understanding documentation structure. Four forms of documentation align along two axes of knowledge: theory/practice and acquisition/application . Here is a more detailed look. User Stories: a way to define what a product does by describing an action/goal and focusing on benefits to the user. As this article explains, the simplest user story can be written in a single sentence: \"As a {end user}, I should be able to {action}, so that I can {benefit}.\" GitHub allows for collaboration on code or documents. A project in a shared repository can be altered by multiple people who make changes that are analyzed and approved. Inspired by GitHub functionality, Ann Gentle suggests technical communicators ought to \" treat docs like code \". Every page is page one. All content now exists in an online context where users are able to search quickly for small information chunks. Because of this, technical communicators must consider how to write topics that meet the demands of online readers. Single-sourcing: information designed as content chunks to be used in multiple ways, more than once, and in a variety of contexts,assembled in a document as pieces of a database that can be formed into several outputs. Structured Authoring and XML : a publishing workflow that maintains standardization and a consistent organization of information. Content rules or a style guide may be used to produce elements that conform to an information hierarchy. Extensible Markup Language (XML) is used to create tags around written content. XML helps implement structured authoring because its specific rules compel a writer to conform to the hierarchical information structure for which XML is designed. Writing with DITA: Darwin Information Typing Architecture (DITA) is an open XML standard that helps larger companies and organizations reuse content categorized as concept topics, task topics, and reference topics. Here is a helpful guide for writing in DITA. Projects Digital Literacy Google Site MkDocs, Markdown, Text Editors (Visual Studio Code) GitHub class collaboration using GitHub Desktop to write explainers, clone and fork a repository, make a pull request, and publish a site. Write DITA topics and Transformation from XML to PDF output in Oxygen XML Final Portfolio Built on MkDocs and Published on GitHub Blog post called \"Integrating DITA and Markdown\" Final Digital Literacy Narrative Readings Videos","title":"Writing with Digital Tech"},{"location":"Writing%20with%20Digital%20Tech/#concepts","text":"Digital Literacy: the ability to evaluate information and use communication tools in a digital context. Markup Language: A way of writing instructions for a computer to perform tasks. Markdown is a lightweight markup language commonly used by technical communicators. Agile: An iterative development process organized as teams-based, non-linear, non-sequential sprints. For more on how technical communicators work in an Agile environment click here . Diataxis: a framework for understanding documentation structure. Four forms of documentation align along two axes of knowledge: theory/practice and acquisition/application . Here is a more detailed look. User Stories: a way to define what a product does by describing an action/goal and focusing on benefits to the user. As this article explains, the simplest user story can be written in a single sentence: \"As a {end user}, I should be able to {action}, so that I can {benefit}.\" GitHub allows for collaboration on code or documents. A project in a shared repository can be altered by multiple people who make changes that are analyzed and approved. Inspired by GitHub functionality, Ann Gentle suggests technical communicators ought to \" treat docs like code \". Every page is page one. All content now exists in an online context where users are able to search quickly for small information chunks. Because of this, technical communicators must consider how to write topics that meet the demands of online readers. Single-sourcing: information designed as content chunks to be used in multiple ways, more than once, and in a variety of contexts,assembled in a document as pieces of a database that can be formed into several outputs. Structured Authoring and XML : a publishing workflow that maintains standardization and a consistent organization of information. Content rules or a style guide may be used to produce elements that conform to an information hierarchy. Extensible Markup Language (XML) is used to create tags around written content. XML helps implement structured authoring because its specific rules compel a writer to conform to the hierarchical information structure for which XML is designed. Writing with DITA: Darwin Information Typing Architecture (DITA) is an open XML standard that helps larger companies and organizations reuse content categorized as concept topics, task topics, and reference topics. Here is a helpful guide for writing in DITA.","title":"Concepts"},{"location":"Writing%20with%20Digital%20Tech/#projects","text":"Digital Literacy Google Site MkDocs, Markdown, Text Editors (Visual Studio Code) GitHub class collaboration using GitHub Desktop to write explainers, clone and fork a repository, make a pull request, and publish a site. Write DITA topics and Transformation from XML to PDF output in Oxygen XML Final Portfolio Built on MkDocs and Published on GitHub Blog post called \"Integrating DITA and Markdown\" Final Digital Literacy Narrative","title":"Projects"},{"location":"Writing%20with%20Digital%20Tech/#readings","text":"","title":"Readings"},{"location":"Writing%20with%20Digital%20Tech/#videos","text":"","title":"Videos"}]}